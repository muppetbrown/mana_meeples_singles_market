C:\Git_Repos\mana_meeples_singles_market>pnpm --filter ./apps/api test

> @mana-meeples/api@ test C:\Git_Repos\mana_meeples_singles_market\apps\api
> vitest


 DEV  v2.1.9 C:/Git_Repos/mana_meeples_singles_market/apps/api

stdout | tests/integration/auth.routes.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668235.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668235.txt

stdout | tests/integration/cards.search.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668223.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668223.txt

stdout | tests/integration/error-handling.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668246.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668246.txt

stdout | tests/integration/inventory.routes.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668236.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668236.txt

stdout | tests/e2e/checkout.flow.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668240.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668240.txt

stdout | tests/integration/orders.routes.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668249.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668249.txt

stdout | tests/integration/storefront.routes.test.ts
📝 Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668255.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668255.txt

stdout | tests/integration/inventory.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops

stdout | tests/integration/orders.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

stdout | tests/integration/inventory.routes.test.ts
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:36.043Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'admin', hasPassword: true }
🔍 Validating credentials...
✅ Credentials valid, generating token...
🎫 Token generated
🍪 Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
📤 Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
✅ Response sent successfully

stdout | tests/integration/orders.routes.test.ts
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:36.047Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'admin', hasPassword: true }
🔍 Validating credentials...
✅ Credentials valid, generating token...
🎫 Token generated
🍪 Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
📤 Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
✅ Response sent successfully

stdout | tests/integration/storefront.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }

stdout | tests/integration/error-handling.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: 🔐 encrypt with Dotenvx: https://dotenvx.com

stdout | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:36.899Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
❌ Missing credentials

stderr | tests/integration/error-handling.test.ts > Error Handling > 401 Unauthorized > returns 401 for protected routes without auth
❌ No admin token found in cookies

stdout | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:36.910Z
🔑 Admin login attempt - handler entered

stderr | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
❌ Invalid request body

stdout | tests/e2e/checkout.flow.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ⚙️  enable debug logging with { debug: true }

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > requires authentication
❌ No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > creates a new order with valid data
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stdout | tests/integration/error-handling.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668246.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668246.json

stdout | tests/integration/cards.search.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

stderr | tests/integration/cards.search.test.ts
⚠️ Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/auth.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:38.980Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
❌ Missing credentials

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with invalid credentials
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:38.987Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'admin', hasPassword: true }
🔍 Validating credentials...
❌ Invalid credentials

stdout | tests/integration/cards.search.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668223.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668223.json

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > accepts valid admin credentials and sets cookie
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:39.993Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'admin', hasPassword: true }
🔍 Validating credentials...
✅ Credentials valid, generating token...
🎫 Token generated
🍪 Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
📤 Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
✅ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/logout > clears the admin token cookie
🔐 AUTH POST /api/auth/admin/logout - 2025-10-22T17:54:39.999Z
🚪 Admin logout request

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns 401 when no token provided
🔐 AUTH GET /api/auth/admin/check - 2025-10-22T17:54:40.002Z
🔍 Admin auth check request
❌ No admin token found

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
🔐 AUTH POST /api/auth/admin/login - 2025-10-22T17:54:40.006Z
🔑 Admin login attempt - handler entered
📋 Credentials received: { username: 'admin', hasPassword: true }
🔍 Validating credentials...
✅ Credentials valid, generating token...
🎫 Token generated
🍪 Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
📤 Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
✅ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
🔐 AUTH GET /api/auth/admin/check - 2025-10-22T17:54:40.011Z
🔍 Admin auth check request
🔍 Verifying token...
✅ Auth check successful for: admin

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stdout | tests/integration/auth.routes.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668235.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668235.json

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stderr | tests/integration/storefront.routes.test.ts
⚠️ Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/storefront.routes.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668255.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668255.json

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
❌ Create order error: Error: Inventory item not found: 999999
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:133:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stderr | tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > requires authentication
❌ No admin token found in cookies

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
❌ Create order error: error: column "quality" of relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg@8.16.3\node_modules\pg\lib\client.js:545:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:139:9 {
  length: 132,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '132',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets'
}

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > requires authentication
❌ No admin token found in cookies

stderr | tests/e2e/checkout.flow.test.ts
⚠️ Unexpected database pool error: terminating connection due to administrator command
⚠️ Unexpected database pool error: terminating connection due to administrator command

stdout | tests/e2e/checkout.flow.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668240.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668240.json

stderr | tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > requires authentication
❌ No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > requires authentication
❌ No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns order details
❌ Database query error: column oi.quality does not exist
   Query: SELECT
        o.*,
        COALESCE(
          json_agg(
            json_build_object(
              'id', oi.id,
              'card_id', oi.card_id,
              'inventory_id', oi.inventory_id,
   Params: [1]
   Code: 42703
❌ Get admin order error: error: column oi.quality does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:358:25 {
  length: 167,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "oi.quantity".',
  position: '268',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn'
}

stderr | tests/integration/inventory.routes.test.ts > DELETE /api/admin/inventory/:id > requires authentication
❌ No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns 404 for non-existent order
❌ Database query error: column oi.quality does not exist
   Query: SELECT
        o.*,
        COALESCE(
          json_agg(
            json_build_object(
              'id', oi.id,
              'card_id', oi.card_id,
              'inventory_id', oi.inventory_id,
   Params: [999999]
   Code: 42703
❌ Get admin order error: error: column oi.quality does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:358:25 {
  length: 167,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "oi.quantity".',
  position: '268',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn'
}

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > requires authentication
❌ No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts
⚠️ Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/inventory.routes.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668236.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668236.json

stderr | tests/integration/orders.routes.test.ts
⚠️ Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/orders.routes.test.ts

✅ Test environment logs written:
   📄 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668249.txt
   📊 C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761155668249.json

 ❯ tests/e2e/checkout.flow.test.ts (6) 18254ms
   ❯ Complete Checkout Flow (E2E) (6) 7997ms
     × completes a full customer journey from browsing to order placement 1547ms
     × handles out-of-stock scenario gracefully 1350ms
     × handles concurrent orders for the same item 1326ms
     × allows admin to cancel an order and restore inventory 1330ms
     × validates customer input sanitization during checkout 1328ms
     × handles multiple items in a single order 1117ms
 ✓ tests/integration/auth.routes.test.ts (6) 12558ms
 ✓ tests/integration/cards.search.test.ts (1) 10916ms
 ✓ tests/integration/error-handling.test.ts (7) 9591ms
 ❯ tests/integration/inventory.routes.test.ts (16) 26056ms
   ❯ POST /api/admin/inventory (6) 8403ms
     ✓ requires authentication 1708ms
     ✓ creates new inventory with valid data 1505ms
     × updates existing inventory on conflict 1326ms
     ✓ rejects invalid card_id 1296ms
     ✓ rejects negative stock quantity 1285ms
     ✓ rejects missing required fields 1282ms
   ✓ GET /api/admin/inventory (3) 2977ms
   ❯ PATCH /api/admin/inventory/:id (4) 3551ms
     ✓ requires authentication 876ms
     ✓ updates inventory stock quantity 879ms
     × updates inventory price 901ms
     ✓ returns 404 for non-existent inventory 894ms
   ✓ DELETE /api/admin/inventory/:id (3) 2694ms
 ❯ tests/integration/orders.routes.test.ts (19) 27940ms
   ❯ POST /api/orders (6) 8569ms
     × creates a new order with valid data 1761ms
     × validates required customer fields 1493ms
     ✓ validates items array is not empty 1332ms
     ✓ validates item quantity limits 1321ms
     ✓ validates email format 1318ms
     × handles transaction rollback on inventory update failure 1343ms
   ✓ GET /api/admin/orders (5) 4796ms
   ❯ GET /api/admin/orders/:id (3) 2745ms
     ✓ requires authentication 925ms
     × returns order details 886ms
     × returns 404 for non-existent order 934ms
   ✓ PATCH /api/admin/orders/:id/status (5) 3408ms
 ✓ tests/integration/storefront.routes.test.ts (5) 16296ms
 ✓ tests/unit/auth.validateCredentials.test.ts (4)
 ✓ tests/unit/slugify.test.ts (1)
 ✓ tests/unit/utils.test.ts (43)
 ✓ tests/unit/validation.test.ts (10)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 13 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > completes a full customer journey from browsing to order placement
Error: expected 200 "OK", got 404 "Not Found"
 ❯ tests/e2e/checkout.flow.test.ts:49:8
     47|     const cardDetailsRes = await request(app)
     48|       .get(`/api/storefront/cards/${selectedCard.id}`)
     49|       .expect(200);
       |        ^
     50|
     51|     expect(cardDetailsRes.body.card).toBeDefined();
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/13]⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
Error: expected 400 "Bad Request", got 500 "Internal Server Error"
 ❯ tests/e2e/checkout.flow.test.ts:191:8
    189|       .post("/api/orders")
    190|       .send(orderData)
    191|       .expect(400);
       |        ^
    192|
    193|     expect(orderRes.body).toHaveProperty("error");
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/13]⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ❯ tests/e2e/checkout.flow.test.ts:246:30
    244|     const failed = results.filter(r => r.status === 400);
    245|
    246|     expect(succeeded.length).toBe(1);
       |                              ^
    247|     expect(failed.length).toBe(1);
    248|     expect(failed[0].body.error).toMatch(/stock|inventory/i);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/13]⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
Error: expected 201 "Created", got 500 "Internal Server Error"
 ❯ tests/e2e/checkout.flow.test.ts:282:8
    280|       .post("/api/orders")
    281|       .send(orderData)
    282|       .expect(201);
       |        ^
    283|
    284|     const orderId = orderRes.body.order.id;
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/13]⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
Error: expected 201 "Created", got 500 "Internal Server Error"
 ❯ tests/e2e/checkout.flow.test.ts:356:8
    354|       .post("/api/orders")
    355|       .send(maliciousOrderData)
    356|       .expect(201);
       |        ^
    357|
    358|     // Verify malicious content was sanitized
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/13]⎯

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
Error: expected 201 "Created", got 500 "Internal Server Error"
 ❯ tests/e2e/checkout.flow.test.ts:412:8
    410|       .post("/api/orders")
    411|       .send(orderData)
    412|       .expect(201);
       |        ^
    413|
    414|     expect(orderRes.body.order).toBeDefined();
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/13]⎯

 FAIL  tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > updates existing inventory on conflict
AssertionError: expected '7.99' to be 7.99 // Object.is equality

- Expected:
7.99

+ Received:
"7.99"

 ❯ tests/integration/inventory.routes.test.ts:104:38
    102|       .expect(200);
    103|
    104|     expect(res.body.inventory.price).toBe(7.99);
       |                                      ^
    105|     expect(res.body.inventory.stock_quantity).toBe(20);
    106|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/13]⎯

 FAIL  tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > updates inventory price
AssertionError: expected '9.99' to be 9.99 // Object.is equality

- Expected:
9.99

+ Received:
"9.99"

 ❯ tests/integration/inventory.routes.test.ts:229:38
    227|       .expect(200);
    228|
    229|     expect(res.body.inventory.price).toBe(9.99);
       |                                      ^
    230|   });
    231|

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/13]⎯

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > creates a new order with valid data
Error: expected 201 "Created", got 500 "Internal Server Error"
 ❯ tests/integration/orders.routes.test.ts:69:8
     67|       .post("/api/orders")
     68|       .send(orderData)
     69|       .expect(201);
       |        ^
     70|
     71|     expect(res.body).toHaveProperty("order");
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/13]⎯

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > validates required customer fields
AssertionError: expected 'Invalid order data' to contain 'email'

Expected: "email"
Received: "Invalid order data"

 ❯ tests/integration/orders.routes.test.ts:101:28
     99|
    100|     expect(res.body).toHaveProperty("error");
    101|     expect(res.body.error).toContain("email");
       |                            ^
    102|   });
    103|

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/13]⎯

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
Error: expected 400 "Bad Request", got 500 "Internal Server Error"
 ❯ tests/integration/orders.routes.test.ts:195:8
    193|       .post("/api/orders")
    194|       .send(orderData)
    195|       .expect(400);
       |        ^
    196|
    197|     expect(res.body).toHaveProperty("error");
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/13]⎯

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns order details
Error: expected 200 "OK", got 500 "Internal Server Error"
 ❯ tests/integration/orders.routes.test.ts:279:8
    277|       .get(`/api/admin/orders/${orderId}`)
    278|       .set("Cookie", authToken)
    279|       .expect(200);
       |        ^
    280|
    281|     expect(res.body).toHaveProperty("order");
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/13]⎯

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns 404 for non-existent order
Error: expected 404 "Not Found", got 500 "Internal Server Error"
 ❯ tests/integration/orders.routes.test.ts:290:8
    288|       .get("/api/admin/orders/999999")
    289|       .set("Cookie", authToken)
    290|       .expect(404);
       |        ^
    291|
    292|     expect(res.body).toHaveProperty("error");
 ❯ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ❯ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ❯ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ❯ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ❯ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ❯ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/13]⎯

 Test Files  3 failed | 8 passed (11)
      Tests  13 failed | 105 passed (118)
   Start at  06:54:27
   Duration  29.09s (transform 561ms, setup 0ms, collect 6.02s, tests 121.77s, environment 2ms, prepare 1.34s)

 FAIL  Tests failed. Watching for file changes...
       press h to show help, press q to quit