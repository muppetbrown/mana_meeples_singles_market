C:\Git_Repos\mana_meeples_singles_market>pnpm --filter ./apps/api test

> @mana-meeples/api@ test C:\Git_Repos\mana_meeples_singles_market\apps\api
> vitest


 DEV  v2.1.9 C:/Git_Repos/mana_meeples_singles_market/apps/api

stdout | tests/integration/cards.search.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979787.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979787.txt

stdout | tests/integration/error-handling.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.txt

stdout | tests/e2e/checkout.flow.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979792.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979792.txt

stdout | tests/integration/auth.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979802.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979802.txt

stdout | tests/integration/orders.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979796.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979796.txt

stdout | tests/integration/inventory.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979788.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979788.txt

stdout | tests/integration/storefront.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.txt

stdout | tests/integration/cards.search.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üóÇÔ∏è backup and recover secrets: https://dotenvx.com/ops

stdout | tests/integration/error-handling.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîê encrypt with Dotenvx: https://dotenvx.com

stdout | tests/integration/storefront.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] }

stdout | tests/integration/inventory.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] }

stdout | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.620Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
‚ùå Missing credentials

stderr | tests/integration/error-handling.test.ts > Error Handling > 401 Unauthorized > returns 401 for protected routes without auth
‚ùå No admin token found in cookies

stdout | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.631Z
üîë Admin login attempt - handler entered

stderr | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
‚ùå Invalid request body

stderr | tests/integration/cards.search.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/inventory.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.662Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.858Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
‚ùå Missing credentials

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with invalid credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.866Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚ùå Invalid credentials

stdout | tests/integration/orders.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîë add access controls to secrets: https://dotenvx.com/ops

stderr | tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > returns paginated cards with default params
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > requires authentication
‚ùå Database query error: relation "card_inventory" does not exist
   Query:
    INSERT INTO card_inventory (card_id, variation_id, quality, foil_type, language, price, stock_quantity)
    VALUES ($1, NULL, $2, $3, $4, $5, $6)
    ON CONFLICT (card_id, variation_id, quality,
   Params: [1001,"Near Mint","Regular","English",5.99]
   Code: 42P01
POST /admin/inventory failed {
  code: '42P01',
  message: 'relation "card_inventory" does not exist',
  card_id: 1001
}

stdout | tests/integration/orders.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:47.998Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > creates new inventory with valid data
‚ùå Database query error: relation "card_inventory" does not exist
   Query:
    INSERT INTO card_inventory (card_id, variation_id, quality, foil_type, language, price, stock_quantity)
    VALUES ($1, NULL, $2, $3, $4, $5, $6)
    ON CONFLICT (card_id, variation_id, quality,
   Params: [1001,"Near Mint","Regular","English",5.99]
   Code: 42P01
POST /admin/inventory failed {
  code: '42P01',
  message: 'relation "card_inventory" does not exist',
  card_id: 1001
}

stderr | tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > filters cards by game_id
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [1,100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > creates a new order with valid data
‚ùå Create order error: TypeError: __vite_ssr_import_2__.pool.connect is not a function
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:70:31
    at Layer.handleRequest (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\layer.js:152:17)
    at next (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\route.js:157:13)
    at Route.dispatch (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\route.js:117:3)
    at handle (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:435:11)
    at Layer.handleRequest (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\layer.js:152:17)
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:295:15
    at processParams (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:582:12)
    at next (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:291:5)
    at Function.handle (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:186:3)

stdout | tests/e2e/checkout.flow.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' }

stdout | tests/integration/cards.search.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979787.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979787.json

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > updates existing inventory on conflict
‚ùå Database query error: relation "card_inventory" does not exist
   Query:
    INSERT INTO card_inventory (card_id, variation_id, quality, foil_type, language, price, stock_quantity)
    VALUES ($1, NULL, $2, $3, $4, $5, $6)
    ON CONFLICT (card_id, variation_id, quality,
   Params: [1001,"Near Mint","Regular","English",5.99]
   Code: 42P01
POST /admin/inventory failed {
  code: '42P01',
  message: 'relation "card_inventory" does not exist',
  card_id: 1001
}

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > updates existing inventory on conflict
‚ùå Database query error: relation "card_inventory" does not exist
   Query:
    INSERT INTO card_inventory (card_id, variation_id, quality, foil_type, language, price, stock_quantity)
    VALUES ($1, NULL, $2, $3, $4, $5, $6)
    ON CONFLICT (card_id, variation_id, quality,
   Params: [1001,"Near Mint","Regular","English",7.99]
   Code: 42P01
POST /admin/inventory failed {
  code: '42P01',
  message: 'relation "card_inventory" does not exist',
  card_id: 1001
}

stderr | tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > filters cards by search term
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: ["%Lightning%",100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stdout | tests/integration/error-handling.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.json

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > accepts valid admin credentials and sets cookie
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:48.879Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/logout > clears the admin token cookie
üîê AUTH POST /api/auth/admin/logout - 2025-10-22T01:19:48.885Z
üö™ Admin logout request

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns 401 when no token provided
üîê AUTH GET /api/auth/admin/check - 2025-10-22T01:19:48.889Z
üîç Admin auth check request
‚ùå No admin token found

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH POST /api/auth/admin/login - 2025-10-22T01:19:48.893Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH GET /api/auth/admin/check - 2025-10-22T01:19:48.899Z
üîç Admin auth check request
üîç Verifying token...
‚úÖ Auth check successful for: admin

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > completes a full customer journey from browsing to order placement
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > respects pagination parameters
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [5,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stdout | tests/integration/auth.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979802.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979802.json

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stdout | tests/integration/storefront.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979798.json

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
‚ùå Create order error: TypeError: __vite_ssr_import_2__.pool.connect is not a function
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:70:31
    at Layer.handleRequest (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\layer.js:152:17)
    at next (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\route.js:157:13)
    at Route.dispatch (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\route.js:117:3)
    at handle (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:435:11)
    at Layer.handleRequest (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\lib\layer.js:152:17)
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:295:15
    at processParams (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:582:12)
    at next (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:291:5)
    at Function.handle (C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\router@2.2.0\node_modules\router\index.js:186:3)

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > requires authentication
‚ùå No admin token found in cookies

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
‚ùå Database query error: relation "card_pricing" does not exist
   Query:
    WITH latest_prices AS (
      SELECT DISTINCT ON (card_id)
             card_id, base_price, foil_price, price_source, updated_at
      FROM card_pricing
      ORDER BY card_id, updated_at DESC N
   Params: [100,0]
   Code: 42P01
GET /storefront/cards failed { code: '42P01', message: 'relation "card_pricing" does not exist' }

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > returns paginated orders list
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        COUNT(oi.id) as item_count,
        SUM(oi.quantity) as total_items
      FROM orders o
      LEFT JOIN order_items oi ON o.id = oi.order_id

      GROUP BY o.id

   Params: [100,0]
   Code: 42P01
‚ùå List orders error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:272:26 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '134',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > filters orders by status
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        COUNT(oi.id) as item_count,
        SUM(oi.quantity) as total_items
      FROM orders o
      LEFT JOIN order_items oi ON o.id = oi.order_id
      WHERE o.status = $1

   Params: ["pending",100,0]
   Code: 42P01
‚ùå List orders error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:272:26 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '134',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stdout | tests/e2e/checkout.flow.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979792.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979792.json

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > supports pagination
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        COUNT(oi.id) as item_count,
        SUM(oi.quantity) as total_items
      FROM orders o
      LEFT JOIN order_items oi ON o.id = oi.order_id

      GROUP BY o.id

   Params: [1,0]
   Code: 42P01
‚ùå List orders error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:272:26 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '134',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > searches orders by customer email
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        COUNT(oi.id) as item_count,
        SUM(oi.quantity) as total_items
      FROM orders o
      LEFT JOIN order_items oi ON o.id = oi.order_id
      WHERE (
        o.custom
   Params: ["%test@example.com%",100,0]
   Code: 42P01
‚ùå List orders error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:272:26 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '134',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns order details
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        json_agg(
          json_build_object(
            'id', oi.id,
            'card_id', oi.card_id,
            'inventory_id', oi.inventory_id,
            'card_name', oi
   Params: [1]
   Code: 42P01
‚ùå Get admin order error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:315:25 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '474',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns 404 for non-existent order
‚ùå Database query error: relation "order_items" does not exist
   Query: SELECT
        o.*,
        json_agg(
          json_build_object(
            'id', oi.id,
            'card_id', oi.card_id,
            'inventory_id', oi.inventory_id,
            'card_name', oi
   Params: [999999]
   Code: 42P01
‚ùå Get admin order error: error: relation "order_items" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:315:25 {
  length: 111,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '474',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1449',
  routine: 'parserOpenTable'
}

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > updates order status
‚ùå Database query error: column "notes" does not exist
   Query: UPDATE orders
       SET status = $1,
           notes = COALESCE($2, notes),
           updated_at = NOW()
       WHERE id = $3
       RETURNING *
   Params: ["confirmed",null,1]
   Code: 42703
‚ùå Update order status error: error: column "notes" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:378:26 {
  length: 105,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '73',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}

stdout | tests/integration/inventory.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979788.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979788.json

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > allows adding notes when updating status
‚ùå Database query error: column "notes" does not exist
   Query: UPDATE orders
       SET status = $1,
           notes = COALESCE($2, notes),
           updated_at = NOW()
       WHERE id = $3
       RETURNING *
   Params: ["completed","Order shipped successfully",1]
   Code: 42703
‚ùå Update order status error: error: column "notes" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:378:26 {
  length: 105,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '73',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > returns 404 for non-existent order
‚ùå Database query error: column "notes" does not exist
   Query: UPDATE orders
       SET status = $1,
           notes = COALESCE($2, notes),
           updated_at = NOW()
       WHERE id = $3
       RETURNING *
   Params: ["confirmed",null,999999]
   Code: 42703
‚ùå Update order status error: error: column "notes" does not exist
    at C:\Git_Repos\mana_meeples_singles_market\node_modules\.pnpm\pg-pool@3.10.1_pg@8.16.3\node_modules\pg-pool\index.js:45:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at Object.query (C:\Git_Repos\mana_meeples_singles_market\apps\api\src\lib\db.ts:68:22)
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:378:26 {
  length: 105,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '73',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}

stdout | tests/integration/orders.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979796.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761095979796.json

 ‚ùØ tests/e2e/checkout.flow.test.ts (6) 11448ms
   ‚ùØ Complete Checkout Flow (E2E) (6) 2064ms
     √ó completes a full customer journey from browsing to order placement 407ms
     √ó handles out-of-stock scenario gracefully 374ms
     √ó handles concurrent orders for the same item 311ms
     √ó allows admin to cancel an order and restore inventory 339ms
     √ó validates customer input sanitization during checkout 331ms
     √ó handles multiple items in a single order 302ms
 ‚úì tests/integration/auth.routes.test.ts (6) 10047ms
 ‚úì tests/integration/cards.search.test.ts (1) 8693ms
 ‚úì tests/integration/error-handling.test.ts (7) 8914ms
 ‚ùØ tests/integration/inventory.routes.test.ts (16) 13356ms
   ‚ùØ POST /api/admin/inventory (6) 1886ms
     √ó requires authentication
     √ó creates new inventory with valid data
     √ó updates existing inventory on conflict 372ms
     ‚úì rejects invalid card_id 340ms
     ‚úì rejects negative stock quantity 312ms
     ‚úì rejects missing required fields
   ‚ùØ GET /api/admin/inventory (3) 1038ms
     √ó requires authentication 362ms
     √ó returns paginated inventory list 347ms
     √ó filters inventory by card_id 329ms
   ‚ùØ PATCH /api/admin/inventory/:id (4) 1208ms
     √ó requires authentication
     √ó updates inventory stock quantity
     √ó updates inventory price
     ‚úì returns 404 for non-existent inventory 465ms
   ‚ùØ DELETE /api/admin/inventory/:id (3) 668ms
     √ó requires authentication
     √ó deletes inventory item
     ‚úì returns 404 for non-existent inventory
 ‚ùØ tests/integration/orders.routes.test.ts (19) 14276ms
   ‚ùØ POST /api/orders (6) 2156ms
     √ó creates a new order with valid data 354ms
     √ó validates required customer fields 419ms
     ‚úì validates items array is not empty 366ms
     ‚úì validates item quantity limits 344ms
     ‚úì validates email format 324ms
     √ó handles transaction rollback on inventory update failure 347ms
   ‚ùØ GET /api/admin/orders (5) 1694ms
     ‚úì requires authentication 314ms
     √ó returns paginated orders list
     √ó filters orders by status
     √ó supports pagination 319ms
     √ó searches orders by customer email 499ms
   ‚ùØ GET /api/admin/orders/:id (3) 730ms
     ‚úì requires authentication
     √ó returns order details
     √ó returns 404 for non-existent order
   ‚ùØ PATCH /api/admin/orders/:id/status (5) 883ms
     ‚úì requires authentication
     √ó updates order status
     ‚úì validates status enum values
     √ó allows adding notes when updating status
     √ó returns 404 for non-existent order
 ‚ùØ tests/integration/storefront.routes.test.ts (5) 10278ms
   ‚ùØ GET /api/storefront/cards (5) 1727ms
     √ó returns paginated cards with default params 356ms
     √ó filters cards by game_id 318ms
     √ó filters cards by search term 360ms
     √ó respects pagination parameters 361ms
     ‚úì returns 400 for invalid query parameters 332ms
 ‚úì tests/unit/auth.validateCredentials.test.ts (4)
 ‚úì tests/unit/slugify.test.ts (1)
 ‚ùØ tests/unit/utils.test.ts (42)
   ‚ùØ String Utilities (24)
     ‚ùØ slugify (10)
       ‚úì converts text to lowercase
       ‚úì replaces spaces with hyphens
       √ó removes special characters
       √ó handles unicode characters
       ‚úì removes leading and trailing hyphens
       ‚úì collapses multiple hyphens to single hyphen
       ‚úì handles empty string
       ‚úì handles string with only special characters
       ‚úì preserves numbers
       ‚úì handles underscores
     ‚úì truncate (6)
     ‚úì titleCase (8)
   ‚úì Database Query Builders (1)
   ‚úì Validation Helpers (1)
   ‚úì Price Formatting (4)
   ‚úì Date Utilities (4)
   ‚úì Array Utilities (8)
 ‚úì tests/unit/validation.test.ts (10)

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ Failed Tests 35 ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > completes a full customer journey from browsing to order placement
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:36:8
     34|     const browseRes = await request(app)
     35|       .get("/api/storefront/cards")
     36|       .expect(200);
       |        ^
     37|
     38|     expect(browseRes.body.cards).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/35]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:165:8
    163|     const browseRes = await request(app)
    164|       .get("/api/storefront/cards")
    165|       .expect(200);
       |        ^
    166|
    167|     const card = browseRes.body.cards[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/35]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:205:8
    203|     const browseRes = await request(app)
    204|       .get("/api/storefront/cards")
    205|       .expect(200);
       |        ^
    206|
    207|     const card = browseRes.body.cards[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/35]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:258:8
    256|     const browseRes = await request(app)
    257|       .get("/api/storefront/cards")
    258|       .expect(200);
       |        ^
    259|
    260|     const card = browseRes.body.cards[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[4/35]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:330:8
    328|     const browseRes = await request(app)
    329|       .get("/api/storefront/cards")
    330|       .expect(200);
       |        ^
    331|
    332|     const card = browseRes.body.cards[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[5/35]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:390:8
    388|     const browseRes = await request(app)
    389|       .get("/api/storefront/cards")
    390|       .expect(200);
       |        ^
    391|
    392|     const card = browseRes.body.cards[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[6/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > requires authentication
Error: expected 401 "Unauthorized", got 500 "Internal Server Error"
 ‚ùØ tests/integration/inventory.routes.test.ts:51:8
     49|         language: "English"
     50|       })
     51|       .expect(401);
       |        ^
     52|
     53|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[7/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > creates new inventory with valid data
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/inventory.routes.test.ts:68:8
     66|         language: "English"
     67|       })
     68|       .expect(200);
       |        ^
     69|
     70|     expect(res.body).toHaveProperty("inventory");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[8/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > updates existing inventory on conflict
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/inventory.routes.test.ts:102:8
    100|         language: "English"
    101|       })
    102|       .expect(200);
       |        ^
    103|
    104|     expect(res.body.inventory.price).toBe(7.99);
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[9/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > requires authentication
Error: expected 401 "Unauthorized", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:167:8
    165|     const res = await request(app)
    166|       .get("/api/admin/inventory")
    167|       .expect(401);
       |        ^
    168|
    169|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[10/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > returns paginated inventory list
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:176:8
    174|       .get("/api/admin/inventory")
    175|       .set("Cookie", authToken)
    176|       .expect(200);
       |        ^
    177|
    178|     expect(res.body).toHaveProperty("inventory");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[11/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > filters inventory by card_id
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:187:8
    185|       .set("Cookie", authToken)
    186|       .query({ card_id: 1001 })
    187|       .expect(200);
       |        ^
    188|
    189|     expect(res.body.inventory).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[12/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > requires authentication
Error: expected 401 "Unauthorized", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:207:8
    205|       .patch(`/api/admin/inventory/${inventoryId}`)
    206|       .send({ stock_quantity: 20 })
    207|       .expect(401);
       |        ^
    208|
    209|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[13/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > updates inventory stock quantity
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:217:8
    215|       .set("Cookie", authToken)
    216|       .send({ stock_quantity: 25 })
    217|       .expect(200);
       |        ^
    218|
    219|     expect(res.body.inventory.stock_quantity).toBe(25);
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[14/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > updates inventory price
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:227:8
    225|       .set("Cookie", authToken)
    226|       .send({ price: 9.99 })
    227|       .expect(200);
       |        ^
    228|
    229|     expect(res.body.inventory.price).toBe(9.99);
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[15/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > DELETE /api/admin/inventory/:id > requires authentication
Error: expected 401 "Unauthorized", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:253:8
    251|     const res = await request(app)
    252|       .delete(`/api/admin/inventory/${inventoryId}`)
    253|       .expect(401);
       |        ^
    254|
    255|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[16/35]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > DELETE /api/admin/inventory/:id > deletes inventory item
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/integration/inventory.routes.test.ts:262:8
    260|       .delete(`/api/admin/inventory/${inventoryId}`)
    261|       .set("Cookie", authToken)
    262|       .expect(200);
       |        ^
    263|
    264|     expect(res.body).toHaveProperty("success");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[17/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > creates a new order with valid data
Error: expected 201 "Created", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:69:8
     67|       .post("/api/orders")
     68|       .send(orderData)
     69|       .expect(201);
       |        ^
     70|
     71|     expect(res.body).toHaveProperty("order");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[18/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > validates required customer fields
AssertionError: expected 'Invalid order data' to contain 'email'

Expected: "email"
Received: "Invalid order data"

 ‚ùØ tests/integration/orders.routes.test.ts:101:28
     99|
    100|     expect(res.body).toHaveProperty("error");
    101|     expect(res.body.error).toContain("email");
       |                            ^
    102|   });
    103|

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[19/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
Error: expected 400 "Bad Request", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:195:8
    193|       .post("/api/orders")
    194|       .send(orderData)
    195|       .expect(400);
       |        ^
    196|
    197|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[20/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders > returns paginated orders list
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:219:8
    217|       .get("/api/admin/orders")
    218|       .set("Cookie", authToken)
    219|       .expect(200);
       |        ^
    220|
    221|     expect(res.body).toHaveProperty("orders");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[21/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders > filters orders by status
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:231:8
    229|       .set("Cookie", authToken)
    230|       .query({ status: "pending" })
    231|       .expect(200);
       |        ^
    232|
    233|     expect(res.body.orders).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[22/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders > supports pagination
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:244:8
    242|       .set("Cookie", authToken)
    243|       .query({ limit: 1, offset: 0 })
    244|       .expect(200);
       |        ^
    245|
    246|     expect(res.body.orders.length).toBeLessThanOrEqual(1);
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[23/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders > searches orders by customer email
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:254:8
    252|       .set("Cookie", authToken)
    253|       .query({ search: "test@example.com" })
    254|       .expect(200);
       |        ^
    255|
    256|     expect(res.body.orders).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[24/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns order details
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:279:8
    277|       .get(`/api/admin/orders/${orderId}`)
    278|       .set("Cookie", authToken)
    279|       .expect(200);
       |        ^
    280|
    281|     expect(res.body).toHaveProperty("order");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[25/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > returns 404 for non-existent order
Error: expected 404 "Not Found", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:290:8
    288|       .get("/api/admin/orders/999999")
    289|       .set("Cookie", authToken)
    290|       .expect(404);
       |        ^
    291|
    292|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[26/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > updates order status
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:317:8
    315|       .set("Cookie", authToken)
    316|       .send({ status: "confirmed" })
    317|       .expect(200);
       |        ^
    318|
    319|     expect(res.body.order.status).toBe("confirmed");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[27/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > allows adding notes when updating status
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:340:8
    338|         notes: "Order shipped successfully"
    339|       })
    340|       .expect(200);
       |        ^
    341|
    342|     expect(res.body.order.status).toBe("completed");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[28/35]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > returns 404 for non-existent order
Error: expected 404 "Not Found", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:350:8
    348|       .set("Cookie", authToken)
    349|       .send({ status: "confirmed" })
    350|       .expect(404);
       |        ^
    351|
    352|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[29/35]‚éØ

 FAIL  tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > returns paginated cards with default params
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/storefront.routes.test.ts:32:8
     30|     const res = await request(app)
     31|       .get("/api/storefront/cards")
     32|       .expect(200);
       |        ^
     33|
     34|     expect(res.body).toHaveProperty("cards");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[30/35]‚éØ

 FAIL  tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > filters cards by game_id
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/storefront.routes.test.ts:42:8
     40|       .get("/api/storefront/cards")
     41|       .query({ game_id: 1 })
     42|       .expect(200);
       |        ^
     43|
     44|     expect(res.body.cards).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[31/35]‚éØ

 FAIL  tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > filters cards by search term
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/storefront.routes.test.ts:55:8
     53|       .get("/api/storefront/cards")
     54|       .query({ search: "Lightning" })
     55|       .expect(200);
       |        ^
     56|
     57|     expect(res.body.cards).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[32/35]‚éØ

 FAIL  tests/integration/storefront.routes.test.ts > GET /api/storefront/cards > respects pagination parameters
Error: expected 200 "OK", got 500 "Internal Server Error"
 ‚ùØ tests/integration/storefront.routes.test.ts:66:8
     64|       .get("/api/storefront/cards")
     65|       .query({ page: 1, per_page: 5 })
     66|       .expect(200);
       |        ^
     67|
     68|     expect(res.body.cards).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[33/35]‚éØ

 FAIL  tests/unit/utils.test.ts > String Utilities > slugify > removes special characters
AssertionError: expected 'black-lotus-2023' to be 'blacklotus2023' // Object.is equality

Expected: "blacklotus2023"
Received: "black-lotus-2023"

 ‚ùØ tests/unit/utils.test.ts:18:43
     16|     it("removes special characters", () => {
     17|       expect(slugify("Lightning Bolt!")).toBe("lightning-bolt");
     18|       expect(slugify("Black@Lotus#2023")).toBe("blacklotus2023");
       |                                           ^
     19|     });
     20|

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[34/35]‚éØ

 FAIL  tests/unit/utils.test.ts > String Utilities > slugify > handles unicode characters
AssertionError: expected 'cafe-munchen' to be 'caf-mnchen' // Object.is equality

Expected: "caf-mnchen"
Received: "cafe-munchen"

 ‚ùØ tests/unit/utils.test.ts:22:39
     20|
     21|     it("handles unicode characters", () => {
     22|       expect(slugify("Caf√© M√ºnch√´n")).toBe("caf-mnchen");
       |                                       ^
     23|     });
     24|

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[35/35]‚éØ

 Test Files  5 failed | 6 passed (11)
      Tests  35 failed | 82 passed (117)
   Start at  14:19:38
   Duration  15.44s (transform 512ms, setup 0ms, collect 6.25s, tests 77.17s, environment 2ms, prepare 1.32s)

 FAIL  Tests failed. Watching for file changes...