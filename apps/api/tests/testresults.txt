C:\Git_Repos\mana_meeples_singles_market>pnpm --filter ./apps/api test

> @mana-meeples/api@ test C:\Git_Repos\mana_meeples_singles_market\apps\api
> vitest


 DEV  v2.1.9 C:/Git_Repos/mana_meeples_singles_market/apps/api

stdout | tests/integration/auth.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.txt

stdout | tests/integration/inventory.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.txt

stdout | tests/integration/cards.search.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908803.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908803.txt

stdout | tests/integration/error-handling.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.txt

stdout | tests/integration/orders.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.txt

stdout | tests/e2e/checkout.flow.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908798.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908798.txt

stdout | tests/integration/storefront.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908797.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908797.txt

stdout | tests/integration/auth.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  suppress all logs with { quiet: true }

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:34.939Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
‚ùå Missing credentials

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with invalid credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:34.951Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚ùå Invalid credentials

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > accepts valid admin credentials and sets cookie
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:35.963Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/logout > clears the admin token cookie
üîê AUTH POST /api/auth/admin/logout - 2025-10-22T19:38:35.976Z
üö™ Admin logout request

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns 401 when no token provided
üîê AUTH GET /api/auth/admin/check - 2025-10-22T19:38:35.982Z
üîç Admin auth check request
‚ùå No admin token found

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:35.989Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH GET /api/auth/admin/check - 2025-10-22T19:38:35.998Z
üîç Admin auth check request
üîç Verifying token...
‚úÖ Auth check successful for: admin

stdout | tests/integration/cards.search.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild

stdout | tests/integration/error-handling.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîê encrypt with Dotenvx: https://dotenvx.com

stderr | tests/integration/cards.search.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:36.670Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
‚ùå Missing credentials

stderr | tests/integration/error-handling.test.ts > Error Handling > 401 Unauthorized > returns 401 for protected routes without auth
‚ùå No admin token found in cookies

stdout | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:36.681Z
üîë Admin login attempt - handler entered

stderr | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
‚ùå Invalid request body

stdout | tests/integration/orders.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîÑ add secrets lifecycle management: https://dotenvx.com/ops

stdout | tests/integration/orders.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:36.784Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/e2e/checkout.flow.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  suppress all logs with { quiet: true }

stdout | tests/integration/auth.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.json

stdout | tests/integration/cards.search.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908803.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908803.json

stdout | tests/integration/error-handling.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908806.json

stdout | tests/integration/storefront.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üîê encrypt with Dotenvx: https://dotenvx.com

stdout | tests/integration/inventory.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  enable debug logging with { debug: true }

stdout | tests/integration/inventory.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:38.122Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > requires authentication
‚ùå No admin token found in cookies

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
‚ùå Create order error: Error: Insufficient stock for Lightning Bolt
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:145:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
‚ùå Create order error: Error: Insufficient stock for Lightning Bolt
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:145:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stdout | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
üîê AUTH POST /api/auth/admin/login - 2025-10-22T19:38:43.542Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
‚ùå Create order error: Error: Inventory item not found: 999999
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:138:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/integration/storefront.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stderr | tests/e2e/checkout.flow.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/storefront.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908797.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908797.json

stdout | tests/e2e/checkout.flow.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908798.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908798.json

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > DELETE /api/admin/inventory/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/inventory.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.json

stderr | tests/integration/orders.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/orders.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761161908801.json

 ‚ùØ tests/e2e/checkout.flow.test.ts (6) 17030ms
   ‚ùØ Complete Checkout Flow (E2E) (6) 8106ms
     √ó completes a full customer journey from browsing to order placement 1234ms
     ‚úì handles out-of-stock scenario gracefully 1323ms
     ‚úì handles concurrent orders for the same item 1404ms
     √ó allows admin to cancel an order and restore inventory 1347ms
     ‚úì validates customer input sanitization during checkout 1362ms
     √ó handles multiple items in a single order 1436ms
 ‚úì tests/integration/auth.routes.test.ts (6) 8107ms
 ‚úì tests/integration/cards.search.test.ts (1) 8723ms
 ‚úì tests/integration/error-handling.test.ts (7) 8918ms
 ‚úì tests/integration/inventory.routes.test.ts (16) 27078ms
 ‚ùØ tests/integration/orders.routes.test.ts (19) 28134ms
   ‚ùØ POST /api/orders (6) 8022ms
     ‚úì creates a new order with valid data 1268ms
     √ó validates required customer fields 1272ms
     ‚úì validates items array is not empty 1298ms
     ‚úì validates item quantity limits 1414ms
     ‚úì validates email format 1344ms
     ‚úì handles transaction rollback on inventory update failure 1425ms
   ‚úì GET /api/admin/orders (5) 4802ms
   ‚úì GET /api/admin/orders/:id (3) 2840ms
   ‚úì PATCH /api/admin/orders/:id/status (5) 3866ms
 ‚úì tests/integration/storefront.routes.test.ts (5) 16850ms
 ‚úì tests/unit/auth.validateCredentials.test.ts (4)
 ‚úì tests/unit/slugify.test.ts (1)
 ‚úì tests/unit/utils.test.ts (43)
 ‚úì tests/unit/validation.test.ts (10)

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ Failed Tests 4 ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > completes a full customer journey from browsing to order placement
AssertionError: expected { id: 1, quality: 'Near Mint', ‚Ä¶(4) } to have property "inventory_id"
 ‚ùØ tests/e2e/checkout.flow.test.ts:55:23
     53|
     54|     const variation = cardDetailsRes.body.card.variations[0];
     55|     expect(variation).toHaveProperty("inventory_id");
       |                       ^
     56|     expect(variation).toHaveProperty("price");
     57|     expect(variation.stock).toBeGreaterThan(0);

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/4]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
AssertionError: expected undefined to be 7 // Object.is equality

- Expected:
7

+ Received:
undefined

 ‚ùØ tests/e2e/checkout.flow.test.ts:292:39
    290|
    291|     const afterOrderVariation = afterOrderRes.body.card.variations[0];
    292|     expect(afterOrderVariation.stock).toBe(initialStock - 3);
       |                                       ^
    293|
    294|     // Step 2: Admin cancels the order

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/4]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
AssertionError: expected 1 to be 2 // Object.is equality

- Expected
+ Received

- 2
+ 1

 ‚ùØ tests/e2e/checkout.flow.test.ts:415:73
    413|
    414|     expect(orderRes.body.order).toBeDefined();
    415|     expect(orderRes.body.order.items?.length || orderData.items.length).toBe(2);
       |                                                                         ^
    416|   });
    417| });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/4]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > validates required customer fields
AssertionError: expected 'customer: Required' to contain 'email'

Expected: "email"
Received: "customer: Required"

 ‚ùØ tests/integration/orders.routes.test.ts:101:28
     99|
    100|     expect(res.body).toHaveProperty("error");
    101|     expect(res.body.error).toContain("email");
       |                            ^
    102|   });
    103|

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[4/4]‚éØ

 Test Files  2 failed | 9 passed (11)
      Tests  4 failed | 114 passed (118)
   Start at  08:38:27
   Duration  29.38s (transform 712ms, setup 0ms, collect 6.29s, tests 114.99s, environment 2ms, prepare 1.87s)

 FAIL  Tests failed. Watching for file changes...
       press h to show help, press q to quit