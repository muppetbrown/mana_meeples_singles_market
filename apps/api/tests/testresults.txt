C:\Git_Repos\mana_meeples_singles_market>pnpm --filter ./apps/api test

> @mana-meeples/api@ test C:\Git_Repos\mana_meeples_singles_market\apps\api
> vitest


 DEV  v2.1.9 C:/Git_Repos/mana_meeples_singles_market/apps/api

stdout | tests/integration/auth.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.txt

stdout | tests/integration/error-handling.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453696.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453696.txt

stdout | tests/integration/inventory.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.txt

stdout | tests/integration/storefront.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453692.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453692.txt

stdout | tests/integration/orders.routes.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.txt

stdout | tests/e2e/checkout.flow.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453687.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453687.txt

stdout | tests/integration/cards.search.test.ts
üìù Test logging initialized:
   JSON: C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.json
   TXT:  C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.txt

stdout | tests/integration/cards.search.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] }

stdout | tests/integration/auth.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] }

stdout | tests/integration/error-handling.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  override existing env vars with { override: true }

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:41.765Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with missing credentials
‚ùå Missing credentials

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > rejects login with invalid credentials
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:41.774Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚ùå Invalid credentials

stdout | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:41.791Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'MISSING', hasPassword: false }

stderr | tests/integration/error-handling.test.ts > Error Handling > 400 Bad Request > returns 400 for malformed request body
‚ùå Missing credentials

stderr | tests/integration/error-handling.test.ts > Error Handling > 401 Unauthorized > returns 401 for protected routes without auth
‚ùå No admin token found in cookies

stdout | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:41.804Z
üîë Admin login attempt - handler entered

stderr | tests/integration/error-handling.test.ts > Error Handling > Content-Type validation > requires JSON content-type for POST requests
‚ùå Invalid request body

stderr | tests/integration/cards.search.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/storefront.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject }

stdout | tests/e2e/checkout.flow.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`

stdout | tests/integration/orders.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üë• sync secrets across teammates & machines: https://dotenvx.com/ops

stdout | tests/integration/orders.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:42.346Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/cards.search.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.json

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/login > accepts valid admin credentials and sets cookie
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:42.795Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > POST /api/auth/admin/logout > clears the admin token cookie
üîê AUTH POST /api/auth/admin/logout - 2025-10-22T18:57:42.801Z
üö™ Admin logout request

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns 401 when no token provided
üîê AUTH GET /api/auth/admin/check - 2025-10-22T18:57:42.805Z
üîç Admin auth check request
‚ùå No admin token found

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:42.811Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/auth.routes.test.ts > GET /api/auth/admin/check > returns authenticated status with valid token
üîê AUTH GET /api/auth/admin/check - 2025-10-22T18:57:42.816Z
üîç Admin auth check request
üîç Verifying token...
‚úÖ Auth check successful for: admin

stdout | tests/integration/inventory.routes.test.ts
[dotenv@17.2.3] injecting env (22) from .env -- tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`

stdout | tests/integration/inventory.routes.test.ts
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:42.972Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/error-handling.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453696.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453696.json

stdout | tests/integration/auth.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.json

stderr | tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > requires authentication
‚ùå No admin token found in cookies

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
‚ùå Create order error: Error: Insufficient stock for Lightning Bolt
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:142:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
‚ùå Create order error: Error: Insufficient stock for item: Lightning Bolt
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:181:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/integration/storefront.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
üîê AUTH POST /api/auth/admin/login - 2025-10-22T18:57:49.188Z
üîë Admin login attempt - handler entered
üìã Credentials received: { username: 'admin', hasPassword: true }
üîç Validating credentials...
‚úÖ Credentials valid, generating token...
üé´ Token generated
üç™ Setting cookie with config: {
  httpOnly: true,
  secure: false,
  sameSite: 'strict',
  domain: '(current domain)'
}
üì§ Sending response: { success: true, message: 'Login successful', expiresIn: '24h' }
‚úÖ Response sent successfully

stdout | tests/integration/storefront.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453692.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453692.json

stderr | tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
‚ùå Create order error: Error: Inventory item not found: 999999
    at C:\Git_Repos\mana_meeples_singles_market\apps\api\src\routes\orders.ts:135:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

stderr | tests/e2e/checkout.flow.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/e2e/checkout.flow.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453687.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453687.json

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > GET /api/admin/inventory > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > PATCH /api/admin/inventory/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > GET /api/admin/orders/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts > DELETE /api/admin/inventory/:id > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/orders.routes.test.ts > PATCH /api/admin/orders/:id/status > requires authentication
‚ùå No admin token found in cookies

stderr | tests/integration/inventory.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/inventory.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453689.json

stderr | tests/integration/orders.routes.test.ts
‚ö†Ô∏è Unexpected database pool error: terminating connection due to administrator command

stdout | tests/integration/orders.routes.test.ts

‚úÖ Test environment logs written:
   üìÑ C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.txt
   üìä C:\Git_Repos\mana_meeples_singles_market\apps\api\test-logs\test-env-1761159453691.json

 ‚ùØ tests/e2e/checkout.flow.test.ts (6) 17369ms
   ‚ùØ Complete Checkout Flow (E2E) (6) 8114ms
     √ó completes a full customer journey from browsing to order placement 1530ms
     √ó handles out-of-stock scenario gracefully 1326ms
     √ó handles concurrent orders for the same item 1358ms
     √ó allows admin to cancel an order and restore inventory 1418ms
     √ó validates customer input sanitization during checkout 1325ms
     √ó handles multiple items in a single order 1157ms
 ‚úì tests/integration/auth.routes.test.ts (6) 10049ms
 ‚úì tests/integration/cards.search.test.ts (1) 8960ms
 ‚úì tests/integration/error-handling.test.ts (7) 9326ms
 ‚ùØ tests/integration/inventory.routes.test.ts (16) 26638ms
   ‚ùØ POST /api/admin/inventory (6) 7624ms
     ‚úì requires authentication 1325ms
     ‚úì creates new inventory with valid data 1300ms
     √ó updates existing inventory on conflict 1285ms
     ‚úì rejects invalid card_id 1380ms
     ‚úì rejects negative stock quantity 1263ms
     ‚úì rejects missing required fields 1070ms
   ‚úì GET /api/admin/inventory (3) 2735ms
   ‚úì PATCH /api/admin/inventory/:id (4) 3605ms
   ‚úì DELETE /api/admin/inventory/:id (3) 2683ms
 ‚ùØ tests/integration/orders.routes.test.ts (19) 27970ms
   ‚ùØ POST /api/orders (6) 7964ms
     √ó creates a new order with valid data 1465ms
     √ó validates required customer fields 1315ms
     ‚úì validates items array is not empty 1305ms
     ‚úì validates item quantity limits 1409ms
     ‚úì validates email format 1303ms
     √ó handles transaction rollback on inventory update failure 1166ms
   ‚úì GET /api/admin/orders (5) 4565ms
   ‚úì GET /api/admin/orders/:id (3) 2703ms
   ‚úì PATCH /api/admin/orders/:id/status (5) 3536ms
 ‚úì tests/integration/storefront.routes.test.ts (5) 16106ms
 ‚úì tests/unit/auth.validateCredentials.test.ts (4)
 ‚úì tests/unit/slugify.test.ts (1)
 ‚úì tests/unit/utils.test.ts (43)
 ‚úì tests/unit/validation.test.ts (10)

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ Failed Tests 10 ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > completes a full customer journey from browsing to order placement
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/e2e/checkout.flow.test.ts:49:8
     47|     const cardDetailsRes = await request(app)
     48|       .get(`/api/storefront/cards/${selectedCard.id}`)
     49|       .expect(200);
       |        ^
     50|
     51|     expect(cardDetailsRes.body.card).toBeDefined();
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/10]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles out-of-stock scenario gracefully
Error: expected 400 "Bad Request", got 500 "Internal Server Error"
 ‚ùØ tests/e2e/checkout.flow.test.ts:191:8
    189|       .post("/api/orders")
    190|       .send(orderData)
    191|       .expect(400);
       |        ^
    192|
    193|     expect(orderRes.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/10]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles concurrent orders for the same item
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ‚ùØ tests/e2e/checkout.flow.test.ts:247:27
    245|
    246|     expect(succeeded.length).toBe(1);
    247|     expect(failed.length).toBe(1);
       |                           ^
    248|     expect(failed[0].body.error).toMatch(/stock|inventory/i);
    249|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/10]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > allows admin to cancel an order and restore inventory
Error: expected 200 "OK", got 404 "Not Found"
 ‚ùØ tests/e2e/checkout.flow.test.ts:289:8
    287|     const afterOrderRes = await request(app)
    288|       .get(`/api/storefront/cards/${card.id}`)
    289|       .expect(200);
       |        ^
    290|
    291|     const afterOrderVariation = afterOrderRes.body.card.variations[0];
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[4/10]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > validates customer input sanitization during checkout
AssertionError: expected '<script>alert(\'xss\')</script>' not to contain '<script>'

Expected: "<script>"
Received: "<script>alert('xss')</script>"

 ‚ùØ tests/e2e/checkout.flow.test.ts:376:58
    374|
    375|     // Ensure no script tags in the stored data
    376|     expect(orderDetailsRes.body.order.customer_name).not.toContain("<script>");
       |                                                          ^
    377|     expect(orderDetailsRes.body.order.customer_name).not.toContain("</script>");
    378|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[5/10]‚éØ

 FAIL  tests/e2e/checkout.flow.test.ts > Complete Checkout Flow (E2E) > handles multiple items in a single order
AssertionError: expected 1 to be 2 // Object.is equality

- Expected
+ Received

- 2
+ 1

 ‚ùØ tests/e2e/checkout.flow.test.ts:415:73
    413|
    414|     expect(orderRes.body.order).toBeDefined();
    415|     expect(orderRes.body.order.items?.length || orderData.items.length).toBe(2);
       |                                                                         ^
    416|   });
    417| });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[6/10]‚éØ

 FAIL  tests/integration/inventory.routes.test.ts > POST /api/admin/inventory > updates existing inventory on conflict
AssertionError: expected '7.99' to be 7.99 // Object.is equality

- Expected:
7.99

+ Received:
"7.99"

 ‚ùØ tests/integration/inventory.routes.test.ts:104:38
    102|       .expect(200);
    103|
    104|     expect(res.body.inventory.price).toBe(7.99);
       |                                      ^
    105|     expect(res.body.inventory.stock_quantity).toBe(20);
    106|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[7/10]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > creates a new order with valid data
AssertionError: expected undefined to be 'customer@example.com' // Object.is equality

- Expected:
"customer@example.com"

+ Received:
undefined

 ‚ùØ tests/integration/orders.routes.test.ts:73:43
     71|     expect(res.body).toHaveProperty("order");
     72|     expect(res.body.order).toHaveProperty("id");
     73|     expect(res.body.order.customer_email).toBe("customer@example.com");
       |                                           ^
     74|     expect(res.body.order.total).toBe(11.98);
     75|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[8/10]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > validates required customer fields
AssertionError: expected 'customer: Required' to contain 'email'

Expected: "email"
Received: "customer: Required"

 ‚ùØ tests/integration/orders.routes.test.ts:101:28
     99|
    100|     expect(res.body).toHaveProperty("error");
    101|     expect(res.body.error).toContain("email");
       |                            ^
    102|   });
    103|

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[9/10]‚éØ

 FAIL  tests/integration/orders.routes.test.ts > POST /api/orders > handles transaction rollback on inventory update failure
Error: expected 400 "Bad Request", got 500 "Internal Server Error"
 ‚ùØ tests/integration/orders.routes.test.ts:195:8
    193|       .post("/api/orders")
    194|       .send(orderData)
    195|       .expect(400);
       |        ^
    196|
    197|     expect(res.body).toHaveProperty("error");
 ‚ùØ Test._assertStatus ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:309:14
 ‚ùØ ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:365:13
 ‚ùØ Test._assertFunction ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:342:13
 ‚ùØ Test.assert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:195:23
 ‚ùØ localAssert ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:138:14
 ‚ùØ Server.<anonymous> ../../node_modules/.pnpm/supertest@7.1.4/node_modules/supertest/lib/test.js:152:11

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[10/10]‚éØ

 Test Files  3 failed | 8 passed (11)
      Tests  10 failed | 108 passed (118)
   Start at  07:57:32
   Duration  29.24s (transform 748ms, setup 0ms, collect 6.60s, tests 116.56s, environment 2ms, prepare 1.66s)

 FAIL  Tests failed. Watching for file changes...
       press h to show help, press q to quit
